
servoClassV1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000178  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000124  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000178  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001a8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007b5  00000000  00000000  00000208  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000068a  00000000  00000000  000009bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002d5  00000000  00000000  00001047  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  0000131c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000394  00000000  00000000  00001340  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000d8  00000000  00000000  000016d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000017ac  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 90 00 	jmp	0x120	; 0x120 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
int main(void)
{

	
	//TIMSK1 |= (1 << TOIE1) | (1 << OCIE1A);
	ICR1 = TOP_VALUE;
  80:	8f e3       	ldi	r24, 0x3F	; 63
  82:	9c e9       	ldi	r25, 0x9C	; 156
  84:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
  88:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	TCCR1A |= (1 << WGM11);
  8c:	e0 e8       	ldi	r30, 0x80	; 128
  8e:	f0 e0       	ldi	r31, 0x00	; 0
  90:	80 81       	ld	r24, Z
  92:	82 60       	ori	r24, 0x02	; 2
  94:	80 83       	st	Z, r24
	TCCR1A |= (1 << COM1A1); // Sets OC1A as direct output PB1
  96:	80 81       	ld	r24, Z
  98:	80 68       	ori	r24, 0x80	; 128
  9a:	80 83       	st	Z, r24
	TCCR1B |= (1 << WGM12) | (1 << WGM13) | (1 << CS11); // Prescaler of 8
  9c:	e1 e8       	ldi	r30, 0x81	; 129
  9e:	f0 e0       	ldi	r31, 0x00	; 0
  a0:	80 81       	ld	r24, Z
  a2:	8a 61       	ori	r24, 0x1A	; 26
  a4:	80 83       	st	Z, r24
	
	DDRB |= (1 << PB1);
  a6:	21 9a       	sbi	0x04, 1	; 4
	DDRD |= (1 << PD6);
  a8:	56 9a       	sbi	0x0a, 6	; 10
	
	OCR1A = PULSE_MIN;
  aa:	87 ee       	ldi	r24, 0xE7	; 231
  ac:	93 e0       	ldi	r25, 0x03	; 3
  ae:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  b2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
			_delay_ms(10);
			
		}
		*/
		
 		OCR1A = PULSE_MIN;
  b6:	e8 e8       	ldi	r30, 0x88	; 136
  b8:	f0 e0       	ldi	r31, 0x00	; 0
  ba:	47 ee       	ldi	r20, 0xE7	; 231
  bc:	53 e0       	ldi	r21, 0x03	; 3
		_delay_ms(1000);
		OCR1A = PULSE_MID;
  be:	83 e5       	ldi	r24, 0x53	; 83
  c0:	9b e0       	ldi	r25, 0x0B	; 11
		_delay_ms(1000);
		OCR1A = PULSE_MAX;
  c2:	28 e8       	ldi	r18, 0x88	; 136
  c4:	33 e1       	ldi	r19, 0x13	; 19
			_delay_ms(10);
			
		}
		*/
		
 		OCR1A = PULSE_MIN;
  c6:	51 83       	std	Z+1, r21	; 0x01
  c8:	40 83       	st	Z, r20
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ca:	6f ef       	ldi	r22, 0xFF	; 255
  cc:	73 ed       	ldi	r23, 0xD3	; 211
  ce:	a0 e3       	ldi	r26, 0x30	; 48
  d0:	61 50       	subi	r22, 0x01	; 1
  d2:	70 40       	sbci	r23, 0x00	; 0
  d4:	a0 40       	sbci	r26, 0x00	; 0
  d6:	e1 f7       	brne	.-8      	; 0xd0 <main+0x50>
  d8:	00 c0       	rjmp	.+0      	; 0xda <main+0x5a>
  da:	00 00       	nop
		_delay_ms(1000);
		OCR1A = PULSE_MID;
  dc:	91 83       	std	Z+1, r25	; 0x01
  de:	80 83       	st	Z, r24
  e0:	6f ef       	ldi	r22, 0xFF	; 255
  e2:	73 ed       	ldi	r23, 0xD3	; 211
  e4:	a0 e3       	ldi	r26, 0x30	; 48
  e6:	61 50       	subi	r22, 0x01	; 1
  e8:	70 40       	sbci	r23, 0x00	; 0
  ea:	a0 40       	sbci	r26, 0x00	; 0
  ec:	e1 f7       	brne	.-8      	; 0xe6 <main+0x66>
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <main+0x70>
  f0:	00 00       	nop
		_delay_ms(1000);
		OCR1A = PULSE_MAX;
  f2:	31 83       	std	Z+1, r19	; 0x01
  f4:	20 83       	st	Z, r18
  f6:	6f ef       	ldi	r22, 0xFF	; 255
  f8:	73 ed       	ldi	r23, 0xD3	; 211
  fa:	a0 e3       	ldi	r26, 0x30	; 48
  fc:	61 50       	subi	r22, 0x01	; 1
  fe:	70 40       	sbci	r23, 0x00	; 0
 100:	a0 40       	sbci	r26, 0x00	; 0
 102:	e1 f7       	brne	.-8      	; 0xfc <main+0x7c>
 104:	00 c0       	rjmp	.+0      	; 0x106 <main+0x86>
 106:	00 00       	nop
		_delay_ms(1000);
		OCR1A = PULSE_MID;
 108:	91 83       	std	Z+1, r25	; 0x01
 10a:	80 83       	st	Z, r24
 10c:	6f ef       	ldi	r22, 0xFF	; 255
 10e:	73 ed       	ldi	r23, 0xD3	; 211
 110:	a0 e3       	ldi	r26, 0x30	; 48
 112:	61 50       	subi	r22, 0x01	; 1
 114:	70 40       	sbci	r23, 0x00	; 0
 116:	a0 40       	sbci	r26, 0x00	; 0
 118:	e1 f7       	brne	.-8      	; 0x112 <main+0x92>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <main+0x9c>
 11c:	00 00       	nop
 11e:	d3 cf       	rjmp	.-90     	; 0xc6 <main+0x46>

00000120 <_exit>:
 120:	f8 94       	cli

00000122 <__stop_program>:
 122:	ff cf       	rjmp	.-2      	; 0x122 <__stop_program>
